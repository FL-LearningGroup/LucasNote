     1                                  ; haribote-os boot asm
     2                                  ; TAB=4
     3                                  
     4                                  BOTPAK	EQU		0x00008330		; 加载bootpack
     5                                  DSKCAC	EQU		0x00100000		; 磁盘缓存的位置
     6                                  DSKCAC0	EQU		0x00008000		; 磁盘缓存的位置（实模式）
     7                                  
     8                                  ; BOOT_INFO相关
     9                                  CYLS	EQU		0x0ff0			; 引导扇区设置
    10                                  LEDS	EQU		0x0ff1
    11                                  VMODE	EQU		0x0ff2			; 关于颜色的信息
    12                                  SCRNX	EQU		0x0ff4			; 分辨率X
    13                                  SCRNY	EQU		0x0ff6			; 分辨率Y
    14                                  VRAM	EQU		0x0ff8			; 图像缓冲区的起始地址
    15                                  
    16                                  		ORG		0x8200			;  这个的程序要被装载的内存地址
    17                                  
    18                                  ; 画面モードを設定
    19                                  
    20 00000000 B013                    		MOV		AL,0x13			; VGA显卡，320x200x8bit
    21 00000002 B400                    		MOV		AH,0x00
    22 00000004 CD10                    		INT		0x10
    23 00000006 C606F20F08              		MOV		BYTE [VMODE],8	; 屏幕的模式（参考C语言的引用）
    24 0000000B C706F40F4001            		MOV		WORD [SCRNX],320
    25 00000011 C706F60FC800            		MOV		WORD [SCRNY],200
    26 00000017 66C706F80F00000A00      		MOV		DWORD [VRAM],0x000a0000
    27                                  ; 将屏幕变白 
    28                                  ; 		MOV		BX, DS
    29                                  ; 		MOV		AX, 0xa000
    30                                  ; 		MOV		DS, AX
    31                                  ; 		MOV		SI, 0
    32                                  ; draw:
    33                                  ; 		MOV		[SI], BYTE 15
    34                                  ; 		ADD		SI, 1
    35                                  ; 		CMP		SI, 320*200
    36                                  ; 		JBE		draw
    37                                  ; 		MOV		DS, BX
    38                                  
    39                                  ; 通过BIOS获取指示灯状态
    40                                  
    41 00000020 B402                    		MOV		AH,0x02
    42 00000022 CD16                    		INT		0x16 			; keyboard BIOS
    43 00000024 A2F10F                  		MOV		[LEDS],AL
    44                                  
    45                                  ; 防止PIC接受所有中断
    46                                  ;	AT兼容机的规范、PIC初始化
    47                                  ;	然后之前在CLI不做任何事就挂起
    48                                  ;	PIC在同意后初始化
    49                                  
    50 00000027 B0FF                    		MOV		AL,0xff
    51 00000029 E621                    		OUT		0x21,AL
    52 0000002B 90                      		NOP						; 不断执行OUT指令
    53 0000002C E6A1                    		OUT		0xa1,AL
    54                                  
    55 0000002E FA                      		CLI						; 进一步中断CPU
    56                                  
    57                                  ; 让CPU支持1M以上内存、设置A20GATE
    58                                  
    59 0000002F E8B500                  		CALL	waitkbdout
    60 00000032 B0D1                    		MOV		AL,0xd1
    61 00000034 E664                    		OUT		0x64,AL
    62 00000036 E8AE00                  		CALL	waitkbdout
    63 00000039 B0DF                    		MOV		AL,0xdf			; enable A20
    64 0000003B E660                    		OUT		0x60,AL
    65 0000003D E8A700                  		CALL	waitkbdout
    66                                  
    67                                  ; 保护模式转换
    68                                  
    69                                  ;[INSTRSET "i486p"]		; 说明使用486指令
    70                                  
    71 00000040 0F0116[2A01]            		LGDT	[GDTR0]			; 设置临时GDT
    72 00000045 0F20C0                  		MOV		EAX,CR0
    73 00000048 6625FFFFFF7F            		AND		EAX,0x7fffffff	; 使用bit31（禁用分页）
    74 0000004E 6683C801                		OR		EAX,0x00000001	; bit0到1转换（保护模式过渡）
    75 00000052 0F22C0                  		MOV		CR0,EAX
    76 00000055 EB00                    		JMP		pipelineflush
    77                                  pipelineflush:
    78 00000057 B80800                  		MOV		AX,1*8			;  写32bit的段
    79 0000005A 8ED8                    		MOV		DS,AX
    80 0000005C 8EC0                    		MOV		ES,AX
    81 0000005E 8EE0                    		MOV		FS,AX
    82 00000060 8EE8                    		MOV		GS,AX
    83 00000062 8ED0                    		MOV		SS,AX
    84                                  
    85                                  ; bootpack传递
    86                                  
    87 00000064 66BE[30010000]          		MOV		ESI,bootpack	; 源
    88 0000006A 66BF30830000            		MOV		EDI,BOTPAK		; 目标
    89 00000070 66B900000200            		MOV		ECX,512*1024/4
    90 00000076 E87500                  		CALL	memcpy
    91                                  
    92                                  ; 传输磁盘数据
    93                                  
    94                                  ; 从引导区开始
    95                                  
    96 00000079 66BE007C0000            		MOV		ESI,0x7c00		; 源
    97 0000007F 66BF00001000            		MOV		EDI,DSKCAC		; 目标
    98 00000085 66B980000000            		MOV		ECX,512/4
    99 0000008B E86000                  		CALL	memcpy
   100                                  
   101                                  ; 剩余的全部
   102                                  
   103 0000008E 66BE00820000            		MOV		ESI,DSKCAC0+512	; 源
   104 00000094 66BF00021000            		MOV		EDI,DSKCAC+512	; 目标
   105 0000009A 66B900000000            		MOV		ECX,0
   106 000000A0 8A0EF00F                		MOV		CL,BYTE [CYLS]
   107 000000A4 6669C900120000          		IMUL	ECX,512*18*2/4	; 除以4得到字节数
   108 000000AB 6681E980000000          		SUB		ECX,512/4		; IPL偏移量
   109 000000B2 E83900                  		CALL	memcpy
   110                                  
   111                                  ; 由于还需要asmhead才能完成
   112                                  ; 完成其余的bootpack任务
   113                                  
   114                                  ; bootpack启动
   115                                  
   116 000000B5 66BB30830000            		MOV		EBX,BOTPAK
   117 000000BB 66678B4B10              		MOV		ECX,[EBX+16]
   118 000000C0 6683C103                		ADD		ECX,3			; ECX += 3;
   119 000000C4 66C1E902                		SHR		ECX,2			; ECX /= 4;
   120 000000C8 7410                    		JZ		skip			; 传输完成
   121 000000CA 66678B7314              		MOV		ESI,[EBX+20]	; 源
   122 000000CF 6601DE                  		ADD		ESI,EBX
   123 000000D2 66678B7B0C              		MOV		EDI,[EBX+12]	; 目标
   124 000000D7 E81400                  		CALL	memcpy
   125                                  skip:
   126 000000DA 66678B630C              		MOV		ESP,[EBX+12]	; 堆栈的初始化
   127 000000DF 66EA1B0000001000        		JMP		DWORD 2*8:0x0000001b
   128                                  
   129                                  waitkbdout:
   130 000000E7 E464                    		IN		 AL,0x64
   131 000000E9 2402                    		AND		 AL,0x02
   132 000000EB 75FA                    		JNZ		waitkbdout		; AND结果不为0跳转到waitkbdout
   133 000000ED C3                      		RET
   134                                  
   135                                  memcpy:
   136 000000EE 66678B06                		MOV		EAX,[ESI]
   137 000000F2 6683C604                		ADD		ESI,4
   138 000000F6 66678907                		MOV		[EDI],EAX
   139 000000FA 6683C704                		ADD		EDI,4
   140 000000FE 6683E901                		SUB		ECX,1
   141 00000102 75EA                    		JNZ		memcpy			; 运算结果不为0跳转到memcpy
   142 00000104 C3                      		RET
   143                                  ; memcpy地址前缀大小
   144                                  
   145 00000105 00<rept>                		ALIGNB 16, DB 0
   146                                  GDT0:
   147 00000110 00<rept>                		TIMES	8 DB 0				; 初始值
   148 00000118 FFFF00000092CF00        		DW		0xffff,0x0000,0x9200,0x00cf	; 写32bit位段寄存器
   149 00000120 FFFF0000289A4700        		DW		0xffff,0x0000,0x9a28,0x0047	; 可执行的文件的32bit寄存器（bootpack用）
   150                                  
   151 00000128 0000                    		DW		0
   152                                  GDTR0:
   153 0000012A 1700                    		DW		8*3-1
   154 0000012C [10010000]              		DD		GDT0
   155                                  
   156                                  		ALIGNB 16, DB 0
   157                                  bootpack:
